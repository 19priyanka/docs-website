name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-release:
    name: Create Github release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
      last: ${{ steps.get-last-tag.outputs.last }}
      notes: ${{ steps.get-release-notes.outputs.notes }}
      result: ${{ steps.py-get-updates.outputs.result }}
      mails: ${{ steps.get-user-emails.outputs.mails }}
      authors: ${{ steps.get-authors.outputs.authors }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Install python
        uses: actions/setup-python@v2
        
      - name: Get release tag
        id: get-tag
        run: |
          MERGES=$(gh pr list -B main -s merged --search "closed:>2021-02-28" -L 9999 | wc -l | awk '{print $1}')
          echo "::set-output name=tag::release-$MERGES"
                
      - name: Get last release
        id: get-last-tag
        run: |
          LAST=$(gh release list -L 1 | awk '{print $1}')
          echo "::set-output name=last::$LAST"
          
      - name: Get User emails
        id: get-user-emails
        run: |
          echo MAILS=$(git log ${{ steps.get-last-tag.outputs.last }}..HEAD --pretty="%ae" --merges) >> $GITHUB_ENV
          
      - name: Get Authors
        id: get-authors
        run: |
          AUTHORS=$(git log ${{ steps.get-last-tag.outputs.last }}..HEAD --pretty="%an" --merges)
          AUTHORS="${AUTHORS//'%'/'%25'}"
          AUTHORS="${AUTHORS//$'\n'/'%0A'}"
          echo AUTHORS="${AUTHORS//$'\r'/'%0D'}" >> $GITHUB_ENV
          echo "::set-output name=authors::$AUTHORS"
          
      - name: Get release notes
        id: get-release-notes
        run: |
          NOTES=$(git log ${{ steps.get-last-tag.outputs.last }}..HEAD --pretty=" - %b (%s)[%h]" --merges | sed -e 's!Merge pull request !!')
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          echo NOTES="${NOTES//$'\r'/'%0D'}" >> $GITHUB_ENV
          echo "::set-output name=notes::$NOTES"
          
      - name: Install Python
        id: install-python
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
          pip install invoke
          
      - name: Create Updates
        id: py-get-updates
        run: |
          python ./scripts/actions/release-notes.py

      - name: Create release
        run: gh release create ${{ steps.get-tag.outputs.tag }} -t ${{ steps.get-tag.outputs.tag }} -n "${{ env.RESULT }}"
