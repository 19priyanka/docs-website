name: Auto-triage to project boards

on:
  issues:
    types: [opened, labeled]
  pull_request_target:
    types: [opened, labeled]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  COLUMN_NAME: Needs Triage # column where issues will be created
  REPOSITORY: ${{ github.repository }}

jobs:
  content_project:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: 11873277
      PROJECT_NAME: Docs PRs and Issues
    name: Triage to Content Project
    steps:
    - name: Triages NEW issues and NEW pull requests to the Content Project
      if: github.event.action == 'opened'
      run: |
        PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        HEADER="Accept: application/vnd.github.inertia-preview+json"
        PR_ID=$(gh api -H "$HEADER" "repos/$REPOSITORY/pulls?state=open" --jq ".[] | select(.number == $PR_NUMBER).id")
        PROJECT=$(gh api -H "$HEADER" "repos/$REPOSITORY/projects" --jq ".[] | select(.id == $PROJECT_ID).id")
        COLUMN=$(gh api -H "$HEADER" "projects/$PROJECT/columns" --jq ".[] | select(.name == \"$COLUMN_NAME\").id")
        gh api -H "$HEADER" -X POST "projects/columns/$COLUMN/cards" -f content_type='PullRequest' -F content_id="$PR_ID"

  localization_project:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: 12004783
      PROJECT_NAME: Docs Site Localization PRs and Issues
    name: Triage to Localization Project
    steps:
    - name: Triages NEW issues and NEW pull requests to the Localization Project
      if: |
        github.event.action == 'labeled' &&
        (contains(github.event.issue.labels.*.name, 'localization') ||
        contains(github.event.pull_request.labels.*.name, 'localization'))
      run: |
        echo "Action is: ${{ github.event.action }}"
        PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        HEADER="Accept: application/vnd.github.inertia-preview+json"
        PR_ID=$(gh api -H "$HEADER" "repos/$REPOSITORY/pulls?state=open" --jq ".[] | select(.number == $PR_NUMBER).id")
        PROJECT=$(gh api -H "$HEADER" "repos/$REPOSITORY/projects" --jq ".[] | select(.id == $PROJECT_ID).id")
        COLUMN=$(gh api -H "$HEADER" "projects/$PROJECT/columns" --jq ".[] | select(.name == \"$COLUMN_NAME\").id")
        gh api -H "$HEADER" -X POST "projects/columns/$COLUMN/cards" -f content_type='PullRequest' -F content_id="$PR_ID"
